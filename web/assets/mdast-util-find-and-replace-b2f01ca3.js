import{c as m}from"./unist-util-is-7e122464.js";import{v as E}from"./unist-util-visit-parents-9b4d9404.js";function I(e){if(typeof e!="string")throw new TypeError("Expected a string");return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}function F(e,f,u){const p=m((u||{}).ignore||[]),x=R(f);let d=-1;for(;++d<x.length;)E(e,"text",w);function w(n,s){let o=-1,t;for(;++o<s.length;){const a=s[o],r=t?t.children:void 0;if(p(a,r?r.indexOf(a):void 0,t))return;t=a}if(t)return A(n,s)}function A(n,s){const o=s[s.length-1],t=x[d][0],a=x[d][1];let r=0;const y=o.children.indexOf(n);let v=!1,l=[];t.lastIndex=0;let c=t.exec(n.value);for(;c;){const g=c.index,b={index:c.index,input:c.input,stack:[...s,n]};let i=a(...c,b);if(typeof i=="string"&&(i=i.length>0?{type:"text",value:i}:void 0),i===!1?t.lastIndex=g+1:(r!==g&&l.push({type:"text",value:n.value.slice(r,g)}),Array.isArray(i)?l.push(...i):i&&l.push(i),r=g+c[0].length,v=!0),!t.global)break;c=t.exec(n.value)}return v?(r<n.value.length&&l.push({type:"text",value:n.value.slice(r)}),o.children.splice(y,1,...l)):l=[n],y+l.length}}function R(e){const f=[];if(!Array.isArray(e))throw new TypeError("Expected find and replace tuple or list of tuples");const u=!e[0]||Array.isArray(e[0])?e:[e];let h=-1;for(;++h<u.length;){const p=u[h];f.push([k(p[0]),P(p[1])])}return f}function k(e){return typeof e=="string"?new RegExp(I(e),"g"):e}function P(e){return typeof e=="function"?e:function(){return e}}export{F as f};
